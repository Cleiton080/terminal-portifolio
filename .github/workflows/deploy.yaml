---
name: Portifolio Deployment

on:
  push:
    branches:
      - main

env:
  build-artifact-name: latest-build-artifact

jobs:
  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install npm dependencies
        run: npm ci

      # - name: Unit Tests
      #   run: npm run test

  versioning:
    name: Semantic Versioning
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build:
    name: Build
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install npm dependencies
        run: npm ci

      - name: Build Static Files
        run: npm run build

      - name:  Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.build-artifact-name }}
          path: ./build
          retention-days: 1

  deployment:
    name: Deployment to AWS
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Setup AWS
        run: |-
          pip3 install awscli
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.build-artifact-name }}

      - name: Deploy Static Files
        run: |-
          pwd
          aws s3 cp ./ s3://${{ env.AWS_S3_BUCKET }} --recursive
